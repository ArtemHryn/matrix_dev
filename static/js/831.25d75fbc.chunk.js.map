{"version":3,"file":"static/js/831.25d75fbc.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n        }\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.MotionAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.4.7\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name, value) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        const sampledTime = performance.now();\n        /**\n         * Resync handoff animation with optimised animation.\n         *\n         * This step would be unnecessary if we triggered animateChanges() in useEffect,\n         * but due to potential hydration errors we currently fire them in useLayoutEffect.\n         *\n         * By the time we're safely ready to cancel the optimised WAAPI animation,\n         * the main thread might have been blocked and desynced the two animations.\n         *\n         * Here, we resync the two animations before the optimised WAAPI animation is cancelled.\n         */\n        sync.update(() => {\n            if (value.animation) {\n                value.animation.currentTime = performance.now() - sampledTime;\n            }\n        });\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            MotionAppearAnimations.delete(animationId);\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key, value);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.4.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.4.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","useUnmountEffect","clear","map","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","presenceId","blockInitialAnimation","render","MotionAppearAnimations","useEffect","animationState","animateChanges","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","setProps","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","lazyStrictMode","initialLayoutGroupConfig","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","info","setActive","Hover","isNodeOrChild","parentElement","combineFunctions","pipe","transformers","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","startPress","latestProps","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","getSize","stop","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","handoffOptimizedAppearAnimation","animationId","appearStoreId","sampledTime","currentTime","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig","useLayoutEffect"],"sourceRoot":""}