{"version":3,"file":"static/js/831.a0768c2e.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n        }\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.MotionAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.4.7\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name, value) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        const sampledTime = performance.now();\n        /**\n         * Resync handoff animation with optimised animation.\n         *\n         * This step would be unnecessary if we triggered animateChanges() in useEffect,\n         * but due to potential hydration errors we currently fire them in useLayoutEffect.\n         *\n         * By the time we're safely ready to cancel the optimised WAAPI animation,\n         * the main thread might have been blocked and desynced the two animations.\n         *\n         * Here, we resync the two animations before the optimised WAAPI animation is cancelled.\n         */\n        sync.update(() => {\n            if (value.animation) {\n                value.animation.currentTime = performance.now() - sampledTime;\n            }\n        });\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            MotionAppearAnimations.delete(animationId);\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key, value);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.4.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.4.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","prototype","propertyIsEnumerable","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","_","PresenceContext","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","useUnmountEffect","clear","map","presentKeys","targetKeys","numPresent","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","presenceId","blockInitialAnimation","render","MotionAppearAnimations","useEffect","animationState","animateChanges","isRefObject","hasOwnProperty","isVariantLabel","v","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","setProps","React__default","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","lazyStrictMode","initialLayoutGroupConfig","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","info","setActive","Hover","isNodeOrChild","parentElement","combineFunctions","pipe","transformers","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","startPress","latestProps","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","shallowCompare","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","getSize","stop","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","handoffOptimizedAppearAnimation","animationId","appearStoreId","sampledTime","currentTime","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig","useLayoutEffect"],"sourceRoot":""}